/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Voting, VotingInterface } from "../Voting";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "imageId",
        type: "string",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_votePrice",
        type: "uint256",
      },
    ],
    name: "setVotePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "imageId",
        type: "string",
      },
    ],
    name: "upvote",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "votePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "votes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550662386f26fc100006001819055506109968061006e6000396000f3fe6080604052600436106100555760003560e01c806360bde8331461005a5780637362377b14610076578063860c851a1461008d5780638da5cb5b146100b85780639426856d146100e3578063b99ef1fa1461010c575b600080fd5b610074600480360381019061006f91906105c8565b610149565b005b34801561008257600080fd5b5061008b610287565b005b34801561009957600080fd5b506100a261037e565b6040516100af919061062a565b60405180910390f35b3480156100c457600080fd5b506100cd610384565b6040516100da9190610686565b60405180910390f35b3480156100ef57600080fd5b5061010a600480360381019061010591906106cd565b6103a8565b005b34801561011857600080fd5b50610133600480360381019061012e91906105c8565b610440565b604051610140919061062a565b60405180910390f35b60015434101561018e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018590610757565b60405180910390fd5b60016002826040516101a091906107e8565b908152602001604051809103902060008282546101bd919061082e565b92505081905550806040516101d291906107e8565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167fcb6783276e8a4347387036bbfea000268f0a4b1f8c46ac79980609f2af8d2acd60405160405180910390a360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610283573d6000803e3d6000fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c906108d4565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561037b573d6000803e3d6000fd5b50565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042d90610940565b60405180910390fd5b8060018190555050565b6002818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104d58261048c565b810181811067ffffffffffffffff821117156104f4576104f361049d565b5b80604052505050565b600061050761046e565b905061051382826104cc565b919050565b600067ffffffffffffffff8211156105335761053261049d565b5b61053c8261048c565b9050602081019050919050565b82818337600083830152505050565b600061056b61056684610518565b6104fd565b90508281526020810184848401111561058757610586610487565b5b610592848285610549565b509392505050565b600082601f8301126105af576105ae610482565b5b81356105bf848260208601610558565b91505092915050565b6000602082840312156105de576105dd610478565b5b600082013567ffffffffffffffff8111156105fc576105fb61047d565b5b6106088482850161059a565b91505092915050565b6000819050919050565b61062481610611565b82525050565b600060208201905061063f600083018461061b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061067082610645565b9050919050565b61068081610665565b82525050565b600060208201905061069b6000830184610677565b92915050565b6106aa81610611565b81146106b557600080fd5b50565b6000813590506106c7816106a1565b92915050565b6000602082840312156106e3576106e2610478565b5b60006106f1848285016106b8565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820657468657220746f20766f74650000000000000000600082015250565b60006107416018836106fa565b915061074c8261070b565b602082019050919050565b6000602082019050818103600083015261077081610734565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156107ab578082015181840152602081019050610790565b60008484015250505050565b60006107c282610777565b6107cc8185610782565b93506107dc81856020860161078d565b80840191505092915050565b60006107f482846107b7565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061083982610611565b915061084483610611565b925082820190508082111561085c5761085b6107ff565b5b92915050565b7f4f6e6c7920746865206f776e65722063616e207769746864726177204574686560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006108be6021836106fa565b91506108c982610862565b604082019050919050565b600060208201905081810360008301526108ed816108b1565b9050919050565b7f4f6e6c79206f776e65722063616e2073657420766f7465207072696365000000600082015250565b600061092a601d836106fa565b9150610935826108f4565b602082019050919050565b600060208201905081810360008301526109598161091d565b905091905056fea26469706673582212202626d013a4f4c6a2159d8bf7072dd38c2ecdf28414ff8fa6b78ea68f274abb3b64736f6c63430008120033";

type VotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voting__factory extends ContractFactory {
  constructor(...args: VotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Voting> {
    return super.deploy(overrides || {}) as Promise<Voting>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Voting {
    return super.attach(address) as Voting;
  }
  override connect(signer: Signer): Voting__factory {
    return super.connect(signer) as Voting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingInterface {
    return new utils.Interface(_abi) as VotingInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Voting {
    return new Contract(address, _abi, signerOrProvider) as Voting;
  }
}
